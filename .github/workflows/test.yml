name: Test

permissions:
  contents: read

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_DEV_DEBUG: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: "-D warnings"
  RUSTUP_MAX_RETRIES: 10

jobs:
  modern-default:
    # Test modern compilers on standard platforms on Linux.
    name: "Test: ${{ matrix.target }}, Rust ${{ matrix.rust }} (default configuration)"
    runs-on: ubuntu-latest
    env:
      CARGO_PROFILE_DEV_DEBUG: 1
      CARGO_PROFILE_DEV_SPLIT_DEBUGINFO: ${{ matrix.debug_info }}
      RUSTFLAGS: -D warnings -Clink-arg=-Wl,--compress-debug-sections=zlib
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-musleabihf
          - i686-unknown-linux-gnu
          - i686-unknown-linux-musl
          # Unfortunately, As of 1.76 nightly rust uses calls not supported by
          # wine, so we can't run the cross-tests any more
          #- x86_64-pc-windows-gnu
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          # Some lower priority targets too (not currently built as releases)
          - powerpc-unknown-linux-gnu
          - powerpc64-unknown-linux-gnu
        rust:
          - stable
          - nightly
        debug_info:
          - packed
        # include:
        #   # RISCV doesn't work with split debug info (see rust-lang/rust#110224)
        #   - target: riscv64gc-unknown-linux-gnu
        #     rust: stable
        #     debug_info: off
        #   - target: riscv64gc-unknown-linux-gnu
        #     rust: nightly
        #     debug_info: off
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup install --profile minimal ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
      - name: Install cross
        uses: taiki-e/install-action@cross
      - name: Cache builds
        uses: Swatinem/rust-cache@v2.7.3
        with:
          key: ${{ matrix.target }}-${{ matrix.rust }}
      - name: ls
        run: ls -laR .
      - name: Cross compile
        run: cross test --no-run --locked --target ${{ matrix.target }} --verbose
      - name: Cross test
        run: cross test --locked --target ${{ matrix.target }} --verbose

  configurations:
    # Test non-standard configurations, MSRV and Rust versions
    name: 'Test: "${{ matrix.features }}" (Linux), Rust ${{ matrix.rust }}'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        features:
          - --no-default-features
        rust:
          - 1.75.0
          - stable
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup install --profile minimal  ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
      - name: Cache builds
        uses: Swatinem/rust-cache@v2.7.3
        with:
          save-if: ${{ matrix.features == '--no-default-features' }}
      - name: Compile
        run: cargo test --locked ${{ matrix.features }} --verbose --no-run
      - name: Test
        run: cargo test --locked ${{ matrix.features }} --verbose

  exotic-os:
    # Test native builds on non-Linux platforms
    name: "Test: ${{ matrix.target }} on ${{ matrix.os }} with ${{ matrix.rust }}"
    runs-on: ${{ matrix.os }}
    env:
      CARGO_PROFILE_DEV_DEBUG: 1
      CARGO_PROFILE_DEV_SPLIT_DEBUGINFO: "packed"
    strategy:
      fail-fast: false
      matrix:
        include:
          # - target: x86_64-pc-windows-msvc
          #   os: windows-latest
          #   suffix: .exe
          #   debug-suffix: .pdb
          #   rust: stable
          # - target: x86_64-pc-windows-msvc
          #   os: windows-latest
          #   suffix: .exe
          #   debug-suffix: .pdb
          #   rust: nightly
          # - target: x86_64-pc-windows-gnu
          #   os: windows-latest
          #   suffix: .exe
          #   debug-suffix: .pdb
          #   rust: stable
          # - target: x86_64-pc-windows-gnu
          #   os: windows-latest
          #   suffix: .exe
          #   debug-suffix: .pdb
          #   rust: nightly
          - target: x86_64-apple-darwin
            os: macos-latest
            suffix: ""
            debug-suffix: .dSYM
            rust: stable
          - target: x86_64-apple-darwin
            os: macos-latest
            suffix: ""
            debug-suffix: .dSYM
            rust: nightly
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup install --profile minimal ${{ matrix.rust }} && rustup default ${{ matrix.rust }} && rustup target add ${{ matrix.target }}
      - name: Cache builds
        uses: Swatinem/rust-cache@v2.7.3
        with:
          key: ${{ matrix.os }}-${{ matrix.target }}-${{ matrix.rust }}
      - name: Compile
        run: cargo test --no-run --locked --target ${{ matrix.target }} --verbose
      - name: Test
        run: cargo test --locked --target ${{ matrix.target }} --verbose

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup install --profile minimal stable && rustup default stable && rustup component add rustfmt
      - run: cargo fmt -- --check
