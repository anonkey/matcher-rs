name: "Bump version"

on:
  workflow_dispatch:

jobs:
  create-tags:
    name: "Bump version"
    runs-on: "ubuntu-latest"
    outputs:
      tags: ${{steps.get-tags.outputs.tags}}
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 9999
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: taiki-e/cache-cargo-install-action@v1
        with:
          tool: conventional_commits_linter
      - uses: taiki-e/cache-cargo-install-action@v1
        with:
          tool: git-cliff
      - uses: taiki-e/cache-cargo-install-action@v1
        with:
          tool: toml-cli
      - uses: taiki-e/cache-cargo-install-action@v1
        with:
          tool: conventional_commits_next_version

      - name: "Bump versions"
        id: bump-versions
        run: |
          set -vx
          echo new_tags="`./scripts/bump-versions.sh`" >> $GITHUB_OUTPUT

      - name: "Create release branch"
        id: create-release-branch
        # Don't run again on already pushed auto commit. Don't run on pull request events.
        if: steps.bump-versions.outputs.new_tags != ''
        run: |
          set -vex
          git checkout -b "releases/`git rev-parse HEAD`"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit --no-verify -a -m "Release `git tag --points-at HEAD`"
          for tag in "${{ steps.bump-versions.outputs.new_tags }}"; do
            git tag $tag
          done
          echo "branch=releases/`git rev-parse HEAD`" >> $GITHUB_OUTPUT

      - name: Push changes
        if: steps.bump-versions.outputs.new_tags != ''
        uses: anonkey/github-push-action@feat/no-verify-flag
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.create-release-branch.outputs.branch }}
          tags: true

      - name: "Create draft releases"
        if: steps.bump-versions.outputs.new_tags != ''
        id: set-outputs
        run: |
          set -evx
          for tag in `git tag --points-at HEAD`; do
            package=`echo $tag" | sed -r 's/-([0-9]+.?)+//g'`
            version=`echo $tag" | sed -r 's/(([a-z]+)-)+(([0-9]+.?)+)/\3/'`
            echo "package=$package version=$version"

            GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" gh release create --latest --draft --title "${title}" -F "./packages/${package}"
          done

  # create-releases:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #   name: "Create releases"
  #   runs-on: "ubuntu-latest"
  #   needs: create-tags
  #   if: ${{ needs.create-tags.outputs.tags != '' }}
  #   steps:
  #     - name: "Check out the repo"
  #       uses: actions/checkout@v4
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}

  #     - name: "Create release"
  #       uses: actions/create-release@v1
  #       with:
  #         tag_name: ${{needs.create-tag.outputs.tags}}
  #         release_name: ${{needs.create-tag.outputs.tags}}
  #         body: "Release ${{needs.create-tag.outputs.tags}}"
  #         draft: false
  #         prerelease: false
  #         token: ${{ secrets.GITHUB_TOKEN }}
